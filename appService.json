{
  "label": "Gmelius",
  "name": "gmelius",
  "apiVersion": "v1",
  "internal": false,
  "configurationType": "GLOBAL",
  "deployment": {
    "profiles": [
      {
        "name": "default",
        "label": "Default",
        "memory": 256,
        "description": "Default configuration"
      }
    ],
    "allowMultipleInstances": false
  },
  "status": "ACTIVE",
  "stores": [
    {"name": "tokens"}
  ],
  "events": [
    {
      "label": "Webhook",
      "name": "webhook",
      "description": "Notifications from Gmelius about entities"
    }
  ],
  "functions": [
    {
      "label": "GET",
      "name": "_get"
    },
    {
      "label": "POST",
      "name": "_post"
    },
    {
      "label": "PUT",
      "name": "_put"
    },
    {
      "label": "PATCH",
      "name": "_patch"
    },
    {
      "label": "DELETE",
      "name": "_delete"
    }
  ],
  "scripts": [
    "gmelius-helpers.js",
    "http-generic-helpers.js"
  ],
  "configuration": [
    {
      "name": "clientId",
      "label": "Client ID",
      "type": "text",
      "required": true
    },
    {
      "name": "clientSecret",
      "label": "Client Secret",
      "type": "text",
      "required": true
    },
    {
      "name": "codeVerifier",
      "label": "Code Verifier",
      "type": "password",
      "required": true
    },
    {
      "name": "codeChallenge",
      "label": "Code Challenge",
      "type": "password",
      "required": true
    },
    {
      "name": "authorizationCode",
      "label": "Authorization Code",
      "type": "password",
      "required": true
    },
    {
      "name": "redirectUri",
      "label": "Registered URI",
      "description": "Redirect URI to register on your application",
      "type": "label",
      "value": "config.SERVER_URL+ '/callback'"
    },
    {
      "name": "webhook",
      "label": "Webhook URL",
      "type": "label",
      "value": "@config.WEBHOOK_URL"
    },
    {
      "name" : "connectButton",
      "label" : "Connect to Gmelius",
      "description": "Click button to obtain access token",
      "type" : "button",
      "typeOptions": {
        "color" : "primary",
        "icon" : "zmdi-play",
        "action" : "var scopes = 'offline_access;https://api.gmelius.com/public/auth/conversations/read;https://api.gmelius.com/public/auth/conversations/metadata;https://api.gmelius.com/public/auth/conversations/insert;https://api.gmelius.com/public/auth/boards/read;https://api.gmelius.com/public/auth/boards/modify';\nvar redirectUri = config.redirectUri;\nvar codeChallenge = 'XkZXWx_vlPZEOD_iCTBejVMsERlEhTS7JfrH5P1y6AM';\nvar codeVerifier = 'ykzczDS4Z4Ezlfzu8kiXqqTvBQHOmJ2YW1uzBNT1nJiC7BcDvol0Pnh7eCzejRAzhmb1JL15CYddf58irMDJkFj4WnIaTRBxWbHgDOdZwH4Pa9lS9ERTYjadDgrR';\nvar url = 'https://gmelius.io/oauth/authorize?client_id=' + config.clientId + '&code_challenge=' + codeChallenge + '&scope=' + scopes + '&redirect_uri=' + redirectUri;\nvar win = window.open(url, 'Authorization page', 'toolbar=no,scrollbars=no,location=no,statusbar=no,menubar=no,resizable=0,width=500,height=600,left=' + ((screen.width / 2) - 250) + ',top=' + ((screen.height / 2) - 250) + ',');\nvar self = this;\nvar intervalFn = function () {\n\ttry {\n\t\tif (!win || !win.location) {\n\t\t\twindow.clearInterval(pollTimer);\n\t\t} else {\n\t\t\tif (win.location.href.indexOf('/callback') != -1) {\n\t\t\t\twin.innerWidth = 100;\n\t\t\t\twin.innerHeight = 100;\n\t\t\t\twin.screenX = screen.width;\n\t\t\t\twin.screenY = screen.height;\n\t\t\t\twindow.clearInterval(pollTimer);\n\t\t\t\turl = win.location.href;\n\t\t\t\tvar pos = url.indexOf('code=');\n\t\t\t\tvar token\n\t\t\t\tif(pos > -1) {\n\t\t\t\t\ttoken = url.substring(pos + 5);\n\t\t\t\t\tconfig.authorizationCode = token;\n\t\t\t\t\tconfig.codeVerifier = codeVerifier;\n\t\t\t\t\tconfig.codeChallenge = codeChallenge;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttry { win.close(); } catch (e) { }\n\t\t}\n\t} catch (e) {}\n};\nvar pollTimer = window.setInterval(function () { intervalFn.apply(self) }, 500);"
      }
    }
  ]
}